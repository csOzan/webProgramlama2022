 <beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:security="http://www.springframework.org/schema/security"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>

<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
 <property name="dataSource" ref="dataSource" />
 <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>  
                <!-- <prop key="hibernate.hbm2ddl.auto">create</prop>  only for first time, otherwise table created again and again-->  
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>                   
            </props>  
    </property>
  
    
   <property name="packagesToScan">
    <list>        		
         <value>technxt.model</value>        			
    </list>
</property>
    
    <!--  <property name="hibernate.implicit_naming_strategy" value="org.music.persistence.PGConstrainedImplicitNamingStrategy"/> -->
</bean>
<context:component-scan base-package="technxt.*"/>

<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
        <property name="driverClassName" value="org.h2.Driver"></property>  
        <property name="url" value="jdbc:h2:tcp://localhost/~/test;INIT=CREATE SCHEMA IF NOT EXISTS technxt2"></property>
        <property name="username" value="technxt2"></property>
        <property name="password" value=""></property>  
</bean>  


<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- one of the properties available; the maximum file size in bytes -->  
        <property name="maxUploadSize" value="95242880">  
    </property> 
    </bean>
  

	<security:http>
 	<security:csrf disabled="true"/>
 	
 	<!--  with out authentication -->
 	<security:intercept-url pattern="/technxthomepage" access="permitAll"/>
 	<security:intercept-url pattern="/" access="permitAll"/>
 	
 	<!--  to allow users -->
	<security:intercept-url pattern="/customer*" access="hasRole('ROLE_USER')"/> 

 	
 	
 	<!--  to allow admins --> 	
 	<security:intercept-url pattern="/admin*" access="hasRole('ROLE_ADMI')"/>
 	
 	
 
 
 	<!-- login config -->
    <security:form-login 
    login-page="/reqdisplayloginsignpage" 
    authentication-failure-url="/reqdisplayloginsignpage?responsecode=1"    
    login-processing-url="/j_spring_security_check"
    default-target-url="/reqloginvalidate"
    username-parameter="j_username"
password-parameter="j_password"/>
    
    <security:logout 
    logout-success-url="/reqlogout"
    logout-url="/j_spring_security_logout"/>    
 
 </security:http> 
 
   <security:authentication-manager>
    <security:authentication-provider>
  <security:jdbc-user-service data-source-ref="dataSource"
		 users-by-username-query="select cus_loginid,cus_password, cus_isenabled from CustomerDetails where cus_loginid=?" 
		 authorities-by-username-query= "select cus_loginid, cus_role from CustomerDetails where cus_loginid=?"/>
    </security:authentication-provider>
    </security:authentication-manager>
</beans>